// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSC.DbConfiguration;

namespace SSC.WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("SSC.Modelos.Capitulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tema")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Capitulos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CursoId = 1,
                            Descripcion = "capitulo 1 del curso de net core",
                            Tema = "POO"
                        },
                        new
                        {
                            Id = 2,
                            CursoId = 1,
                            Descripcion = "capitulo 2 del curso de net core",
                            Tema = "AutoMapper"
                        },
                        new
                        {
                            Id = 3,
                            CursoId = 2,
                            Descripcion = "cap 1 curso PHP",
                            Tema = "Variables"
                        });
                });

            modelBuilder.Entity("SSC.Modelos.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Costo")
                        .HasColumnType("REAL");

                    b.Property<string>("Instructor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Costo = 2000f,
                            Instructor = "Emanuel Goette",
                            Nombre = "NetCore"
                        },
                        new
                        {
                            Id = 2,
                            Costo = 1500f,
                            Instructor = "Emanuel Goette",
                            Nombre = "Php"
                        });
                });

            modelBuilder.Entity("SSC.Modelos.EvaluacionPractica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Aprobado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("EvaluacionesPracticas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aprobado = true,
                            CursoId = 1,
                            Titulo = "ev practica curso net core"
                        });
                });

            modelBuilder.Entity("SSC.Modelos.EvaluacionTeorica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Calificacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("EvaluacionesTeoricas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calificacion = 68,
                            CursoId = 1,
                            Titulo = "ev teorica curso net core"
                        });
                });

            modelBuilder.Entity("SSC.Modelos.Capitulo", b =>
                {
                    b.HasOne("SSC.Modelos.Curso", "Curso")
                        .WithMany("Capitulos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SSC.Modelos.EvaluacionPractica", b =>
                {
                    b.HasOne("SSC.Modelos.Curso", "Curso")
                        .WithMany("EvaluacionesPracticas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SSC.Modelos.EvaluacionTeorica", b =>
                {
                    b.HasOne("SSC.Modelos.Curso", "Curso")
                        .WithMany("EvaluacionesTeoricas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SSC.Modelos.Curso", b =>
                {
                    b.Navigation("Capitulos");

                    b.Navigation("EvaluacionesPracticas");

                    b.Navigation("EvaluacionesTeoricas");
                });
#pragma warning restore 612, 618
        }
    }
}
